/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projetpendu;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.Arrays;
import java.util.regex.Pattern;

/**
 *
 * @author Sami Driouche
 */
public class MonPendu extends javax.swing.JFrame {

    /**
     * Creates new form MonPendu
     */
    public MonPendu() {
        initComponents();
        this.setVisible(true);
        this.setTitle("Projet - Sami Driouche");
        setMotCacher();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        setResizable(false);
        setLocation(500,200);
        JpanelFenetre = new JPanel();
        Barre_bas = new JPanel();
        jbuttonRestart = new JButton();
        jlabelReponse = new JLabel();
        jbuttonAbandonner = new JButton();
        jbuttonQuitter = new JButton();
        JPanelText = new JPanel();
        jTextField1 = new JTextField();
        jTextField2 = new JTextField();
        JPanelInformation = new JPanel();
        jLabel2 = new JLabel();
        JPanelAlphabet = new JPanel();
        jbuttonA = new JButton();
        jbuttonB = new JButton();
        jbuttonC = new JButton();
        jbuttonD = new JButton();
        jbuttonE = new JButton();
        jbuttonF = new JButton();
        jbuttonG = new JButton();
        jbuttonH = new JButton();
        jbuttonI = new JButton();
        jbuttonJ = new JButton();
        jbuttonK = new JButton();
        jbuttonL = new JButton();
        jbuttonM = new JButton();
        jbuttonN = new JButton();
        jbuttonO = new JButton();
        jbuttonP = new JButton();
        jbuttonQ = new JButton();
        jbuttonR = new JButton();
        jbuttonS = new JButton();
        jbuttonT = new JButton();
        jbuttonU = new JButton();
        jbuttonV = new JButton();
        jbuttonW = new JButton();
        jbuttonX = new JButton();
        jbuttonY = new JButton();
        jbuttonZ = new JButton();
        JPanelCadre = new JPanel();
        PanelImage = new JPanel();
        jLabel3 = new JLabel();


        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        JpanelFenetre.setBackground(new Color(0, 255, 255));

        jbuttonRestart.setBackground(new Color(102, 255, 102));
        jbuttonRestart.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jbuttonRestart.setText("REJOUER");

        jbuttonRestart.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonRejouerActionPerformed(evt);
            }
        });

        jlabelReponse.setFont(new Font("Tahoma", 1, 18)); // NOI18N
        jlabelReponse.setText("Reponse :");

        jbuttonAbandonner.setBackground(new Color(255, 0, 51));
        jbuttonAbandonner.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jbuttonAbandonner.setText("ABANDONNER");
        jbuttonAbandonner.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonAbandonnerActionPerformed(evt);
            }
        });

        jbuttonQuitter.setBackground(new Color(255, 255, 51));
        jbuttonQuitter.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        jbuttonQuitter.setText("QUITTER");
        jbuttonQuitter.addActionListener(e -> {
            this.dispose();
        });

        GroupLayout Barre_basLayout = new GroupLayout(Barre_bas);
        Barre_bas.setLayout(Barre_basLayout);
        Barre_basLayout.setHorizontalGroup(
                Barre_basLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(Barre_basLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jbuttonRestart, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbuttonAbandonner)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbuttonQuitter, GroupLayout.PREFERRED_SIZE, 100, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlabelReponse, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        Barre_basLayout.setVerticalGroup(
                Barre_basLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(Barre_basLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(Barre_basLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jbuttonRestart, GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                                        .addComponent(jlabelReponse, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jbuttonQuitter, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jbuttonAbandonner, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        jTextField1.setEditable(false);
        jTextField1.setText("Trouve le mot qui se cache :"); // NOI18N
        jTextField1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setFont(new Font("Tahoma", 1, 24)); // NOI18N
        jTextField2.setHorizontalAlignment(JTextField.CENTER);
        jTextField2.setEditable(false);
        jTextField2.setText("_ _ _ _ _ _");
        jTextField2.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        GroupLayout JPanelTextLayout = new GroupLayout(JPanelText);
        JPanelText.setLayout(JPanelTextLayout);
        JPanelTextLayout.setHorizontalGroup(
                JPanelTextLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(JPanelTextLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1, GroupLayout.PREFERRED_SIZE, 169, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2))
        );
        JPanelTextLayout.setVerticalGroup(
                JPanelTextLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, JPanelTextLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField1, GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                                .addContainerGap())
                        .addComponent(jTextField2, GroupLayout.Alignment.TRAILING)
        );

        jLabel2.setFont(new Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new Color(25, 175, 180));
        jLabel2.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel2.setText("Bienvenue sur le jeu du Pendu !");

        GroupLayout JPanelInformationLayout = new GroupLayout(JPanelInformation);
        JPanelInformation.setLayout(JPanelInformationLayout);
        JPanelInformationLayout.setHorizontalGroup(
                JPanelInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, JPanelInformationLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        JPanelInformationLayout.setVerticalGroup(
                JPanelInformationLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(JPanelInformationLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                                .addContainerGap())
        );

        jbuttonA.setText("A");
        jbuttonA.setBackground(new Color(0x4E93B8));
        jbuttonA.setFont(new Font("Tahoma", 1, 14));
        jbuttonA.setMaximumSize(new Dimension(50, 50));
        jbuttonA.setMinimumSize(new Dimension(50, 50));
        jbuttonA.setPreferredSize(new Dimension(50, 50));
        jbuttonA.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonAActionPerformed(evt);
            }
        });

        jbuttonB.setText("B");
        jbuttonB.setBackground(new Color(0x4E93B8));
        jbuttonB.setFont(new Font("Tahoma", 1, 14));
        jbuttonB.setMaximumSize(new Dimension(50, 50));
        jbuttonB.setMinimumSize(new Dimension(50, 50));
        jbuttonB.setPreferredSize(new Dimension(50, 50));
        jbuttonB.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonBActionPerformed(evt);
            }
        });

        jbuttonC.setText("C");
        jbuttonC.setBackground(new Color(0x4E93B8));
        jbuttonC.setFont(new Font("Tahoma", 1, 14));
        jbuttonC.setMaximumSize(new Dimension(50, 50));
        jbuttonC.setMinimumSize(new Dimension(50, 50));
        jbuttonC.setPreferredSize(new Dimension(50, 50));
        jbuttonC.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonCActionPerformed(evt);
            }
        });

        jbuttonD.setText("D");
        jbuttonD.setBackground(new Color(0x4E93B8));
        jbuttonD.setFont(new Font("Tahoma", 1, 14));
        jbuttonD.setMaximumSize(new Dimension(50, 50));
        jbuttonD.setMinimumSize(new Dimension(50, 50));
        jbuttonD.setPreferredSize(new Dimension(50, 50));
        jbuttonD.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonDActionPerformed(evt);
            }
        });

        jbuttonE.setText("E");
        jbuttonE.setBackground(new Color(0x4E93B8));
        jbuttonE.setFont(new Font("Tahoma", 1, 14));
        jbuttonE.setMaximumSize(new Dimension(50, 50));
        jbuttonE.setMinimumSize(new Dimension(50, 50));
        jbuttonE.setPreferredSize(new Dimension(50, 50));
        jbuttonE.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonEActionPerformed(evt);
            }
        });

        jbuttonF.setText("F");
        jbuttonF.setBackground(new Color(0x4E93B8));
        jbuttonF.setFont(new Font("Tahoma", 1, 14));
        jbuttonF.setMaximumSize(new Dimension(50, 50));
        jbuttonF.setMinimumSize(new Dimension(50, 50));
        jbuttonF.setPreferredSize(new Dimension(50, 50));
        jbuttonF.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonFActionPerformed(evt);
            }
        });

        jbuttonG.setText("G");
        jbuttonG.setBackground(new Color(0x4E93B8));
        jbuttonG.setFont(new Font("Tahoma", 1, 14));
        jbuttonG.setMaximumSize(new Dimension(50, 50));
        jbuttonG.setMinimumSize(new Dimension(50, 50));
        jbuttonG.setPreferredSize(new Dimension(50, 50));
        jbuttonG.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonGActionPerformed(evt);
            }
        });

        jbuttonH.setText("H");
        jbuttonH.setBackground(new Color(0x4E93B8));
        jbuttonH.setFont(new Font("Tahoma", 1, 14));
        jbuttonH.setMaximumSize(new Dimension(50, 50));
        jbuttonH.setMinimumSize(new Dimension(50, 50));
        jbuttonH.setPreferredSize(new Dimension(50, 50));
        jbuttonH.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonHActionPerformed(evt);
            }
        });

        jbuttonI.setText("I");
        jbuttonI.setBackground(new Color(0x4E93B8));
        jbuttonI.setFont(new Font("Tahoma", 1, 14));
        jbuttonI.setMaximumSize(new Dimension(50, 50));
        jbuttonI.setMinimumSize(new Dimension(50, 50));
        jbuttonI.setPreferredSize(new Dimension(50, 50));
        jbuttonI.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonIActionPerformed(evt);
            }
        });

        jbuttonJ.setText("J");
        jbuttonJ.setBackground(new Color(0x4E93B8));
        jbuttonJ.setFont(new Font("Tahoma", 1, 14));
        jbuttonJ.setMaximumSize(new Dimension(50, 50));
        jbuttonJ.setMinimumSize(new Dimension(50, 50));
        jbuttonJ.setPreferredSize(new Dimension(50, 50));
        jbuttonJ.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonJActionPerformed(evt);
            }
        });

        jbuttonK.setText("K");
        jbuttonK.setBackground(new Color(0x4E93B8));
        jbuttonK.setFont(new Font("Tahoma", 1, 14));
        jbuttonK.setMaximumSize(new Dimension(50, 50));
        jbuttonK.setMinimumSize(new Dimension(50, 50));
        jbuttonK.setPreferredSize(new Dimension(50, 50));
        jbuttonK.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonKActionPerformed(evt);
            }
        });

        jbuttonL.setText("L");
        jbuttonL.setBackground(new Color(0x4E93B8));
        jbuttonL.setFont(new Font("Tahoma", 1, 14));
        jbuttonL.setMaximumSize(new Dimension(50, 50));
        jbuttonL.setMinimumSize(new Dimension(50, 50));
        jbuttonL.setPreferredSize(new Dimension(50, 50));
        jbuttonL.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonLActionPerformed(evt);
            }
        });

        jbuttonM.setText("M");
        jbuttonM.setBackground(new Color(0x4E93B8));
        jbuttonM.setFont(new Font("Tahoma", 1, 14));
        jbuttonM.setMaximumSize(new Dimension(50, 50));
        jbuttonM.setMinimumSize(new Dimension(50, 50));
        jbuttonM.setPreferredSize(new Dimension(50, 50));
        jbuttonM.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonMActionPerformed(evt);
            }
        });

        jbuttonN.setText("N");
        jbuttonN.setBackground(new Color(0x4E93B8));
        jbuttonN.setFont(new Font("Tahoma", 1, 14));
        jbuttonN.setMaximumSize(new Dimension(50, 50));
        jbuttonN.setMinimumSize(new Dimension(50, 50));
        jbuttonN.setPreferredSize(new Dimension(50, 50));
        jbuttonN.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonNActionPerformed(evt);
            }
        });

        jbuttonO.setText("O");
        jbuttonO.setBackground(new Color(0x4E93B8));
        jbuttonO.setFont(new Font("Tahoma", 1, 14));
        jbuttonO.setMaximumSize(new Dimension(50, 50));
        jbuttonO.setMinimumSize(new Dimension(50, 50));
        jbuttonO.setPreferredSize(new Dimension(50, 50));
        jbuttonO.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonOActionPerformed(evt);
            }
        });

        jbuttonP.setText("P");
        jbuttonP.setBackground(new Color(0x4E93B8));
        jbuttonP.setFont(new Font("Tahoma", 1, 14));
        jbuttonP.setMaximumSize(new Dimension(50, 50));
        jbuttonP.setMinimumSize(new Dimension(50, 50));
        jbuttonP.setPreferredSize(new Dimension(50, 50));
        jbuttonP.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonPActionPerformed(evt);
            }
        });

        jbuttonQ.setText("Q");
        jbuttonQ.setBackground(new Color(0x4E93B8));
        jbuttonQ.setFont(new Font("Tahoma", 1, 14));
        jbuttonQ.setMaximumSize(new Dimension(50, 50));
        jbuttonQ.setMinimumSize(new Dimension(50, 50));
        jbuttonQ.setPreferredSize(new Dimension(50, 50));
        jbuttonQ.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonQActionPerformed(evt);
            }
        });

        jbuttonR.setText("R");
        jbuttonR.setBackground(new Color(0x4E93B8));
        jbuttonR.setFont(new Font("Tahoma", 1, 14));
        jbuttonR.setMaximumSize(new Dimension(50, 50));
        jbuttonR.setMinimumSize(new Dimension(50, 50));
        jbuttonR.setPreferredSize(new Dimension(50, 50));
        jbuttonR.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonRActionPerformed(evt);
            }
        });

        jbuttonS.setText("S");
        jbuttonS.setBackground(new Color(0x4E93B8));
        jbuttonS.setFont(new Font("Tahoma", 1, 14));
        jbuttonS.setMaximumSize(new Dimension(50, 50));
        jbuttonS.setMinimumSize(new Dimension(50, 50));
        jbuttonS.setPreferredSize(new Dimension(50, 50));
        jbuttonS.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonSActionPerformed(evt);
            }
        });

        jbuttonT.setText("T");
        jbuttonT.setBackground(new Color(0x4E93B8));
        jbuttonT.setFont(new Font("Tahoma", 1, 14));
        jbuttonT.setMaximumSize(new Dimension(50, 50));
        jbuttonT.setMinimumSize(new Dimension(50, 50));
        jbuttonT.setPreferredSize(new Dimension(50, 50));
        jbuttonT.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonTActionPerformed(evt);
            }
        });

        jbuttonU.setText("U");
        jbuttonU.setBackground(new Color(0x4E93B8));
        jbuttonU.setFont(new Font("Tahoma", 1, 14));
        jbuttonU.setMaximumSize(new Dimension(50, 50));
        jbuttonU.setMinimumSize(new Dimension(50, 50));
        jbuttonU.setPreferredSize(new Dimension(50, 50));
        jbuttonU.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonUActionPerformed(evt);
            }
        });

        jbuttonV.setText("V");
        jbuttonV.setBackground(new Color(0x4E93B8));
        jbuttonV.setFont(new Font("Tahoma", 1, 14));
        jbuttonV.setMaximumSize(new Dimension(50, 50));
        jbuttonV.setMinimumSize(new Dimension(50, 50));
        jbuttonV.setPreferredSize(new Dimension(50, 50));
        jbuttonV.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonVActionPerformed(evt);
            }
        });

        jbuttonW.setText("W");
        jbuttonW.setBackground(new Color(0x4E93B8));
        jbuttonW.setFont(new Font("Tahoma", 1, 14));
        jbuttonW.setMaximumSize(new Dimension(50, 50));
        jbuttonW.setMinimumSize(new Dimension(50, 50));
        jbuttonW.setPreferredSize(new Dimension(50, 50));
        jbuttonW.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonWActionPerformed(evt);
            }
        });

        jbuttonX.setText("X");
        jbuttonX.setBackground(new Color(0x4E93B8));
        jbuttonX.setFont(new Font("Tahoma", 1, 14));
        jbuttonX.setMaximumSize(new Dimension(50, 50));
        jbuttonX.setMinimumSize(new Dimension(50, 50));
        jbuttonX.setPreferredSize(new Dimension(50, 50));
        jbuttonX.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonXActionPerformed(evt);
            }
        });

        jbuttonY.setText("Y");
        jbuttonY.setBackground(new Color(0x4E93B8));
        jbuttonY.setFont(new Font("Tahoma", 1, 14));
        jbuttonY.setMaximumSize(new Dimension(50, 50));
        jbuttonY.setMinimumSize(new Dimension(50, 50));
        jbuttonY.setPreferredSize(new Dimension(50, 50));
        jbuttonY.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonYActionPerformed(evt);
            }
        });

        jbuttonZ.setText("Z");
        jbuttonZ.setBackground(new Color(0x4E93B8));
        jbuttonZ.setFont(new Font("Tahoma", 1, 14));
        jbuttonZ.setMaximumSize(new Dimension(50, 50));
        jbuttonZ.setMinimumSize(new Dimension(50, 50));
        jbuttonZ.setPreferredSize(new Dimension(50, 50));
        jbuttonZ.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButtonZActionPerformed(evt);
            }
        });

        GroupLayout JPanelAlphabetLayout = new GroupLayout(JPanelAlphabet);
        JPanelAlphabet.setLayout(JPanelAlphabetLayout);
        JPanelAlphabetLayout.setHorizontalGroup(
                JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jbuttonZ, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                                .addComponent(jbuttonA, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(jbuttonF, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addComponent(jbuttonK, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                                .addComponent(jbuttonB, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jbuttonC, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jbuttonD, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jbuttonE, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                                                        .addGroup(GroupLayout.Alignment.LEADING, JPanelAlphabetLayout.createSequentialGroup()
                                                                                .addComponent(jbuttonL, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jbuttonM, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                                                .addComponent(jbuttonG, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jbuttonH, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)))
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jbuttonI, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jbuttonN, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(jbuttonO, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(jbuttonJ, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)))
                                                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                                                .addComponent(jbuttonS, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(jbuttonT, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))))))
                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                .addComponent(jbuttonP, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jbuttonQ, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jbuttonR, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                                .addComponent(jbuttonU, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jbuttonV, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jbuttonW, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jbuttonX, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jbuttonY, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)))
                                .addGap(46, 46, 46))
        );
        JPanelAlphabetLayout.setVerticalGroup(
                JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(JPanelAlphabetLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jbuttonD, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonC, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonB, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonE, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonA, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jbuttonF, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonG, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonH, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonI, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonJ, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                .addComponent(jbuttonL, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jbuttonM, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jbuttonN, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonO, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonK, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jbuttonP, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonQ, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonR, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonS, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonT, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JPanelAlphabetLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jbuttonU, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonV, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonW, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonX, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbuttonY, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbuttonZ, GroupLayout.PREFERRED_SIZE, 50, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        JPanelCadre.setBackground(new Color(0, 0, 0));

        PanelImage.setBackground(Color.WHITE);
        GroupLayout PanelImageLayout = new GroupLayout(PanelImage);
        PanelImage.setLayout(PanelImageLayout);
        PanelImageLayout.setHorizontalGroup(
                PanelImageLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
        );
        PanelImageLayout.setVerticalGroup(
                PanelImageLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        GroupLayout JPanelCadreLayout = new GroupLayout(JPanelCadre);
        JPanelCadre.setLayout(JPanelCadreLayout);
        JPanelCadreLayout.setHorizontalGroup(
                JPanelCadreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(JPanelCadreLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(PanelImage, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        JPanelCadreLayout.setVerticalGroup(
                JPanelCadreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(JPanelCadreLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(PanelImage, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        GroupLayout JpanelFenetreLayout = new GroupLayout(JpanelFenetre);
        JpanelFenetre.setLayout(JpanelFenetreLayout);
        JpanelFenetreLayout.setHorizontalGroup(
                JpanelFenetreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(JpanelFenetreLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(JpanelFenetreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(JPanelInformation, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Barre_bas, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(JpanelFenetreLayout.createSequentialGroup()
                                                .addComponent(JPanelAlphabet, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(JPanelCadre, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addComponent(JPanelText, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        JpanelFenetreLayout.setVerticalGroup(
                JpanelFenetreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, JpanelFenetreLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(JPanelInformation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(JpanelFenetreLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(JPanelAlphabet, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(JPanelCadre, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JPanelText, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(Barre_bas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(JpanelFenetre, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(JpanelFenetre, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void setMotCacher(){
        int lignes = 0;
        try
        {
            InputStream is = new FileInputStream("src/projetpendu/liste_mots.txt");
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader buffer = new BufferedReader(isr);

            String line = buffer.readLine();
            StringBuilder builder = new StringBuilder();

            while(line != null){
                builder.append(line).append("\n");
                line = buffer.readLine();
                lignes++;
            }
            System.out.println("Nombre de lignes : "+ lignes);
        }
        catch (FileNotFoundException ex)
        {
            // insert code to run when exception occurs
            System.out.println("Erreur !"+ ex);
        } catch (IOException e) {
            e.printStackTrace();
        }


        int ligneAleatoire = 1 + (int)(Math.random() * ((lignes - 1) + 1));

        try {
            //lire le fichier file.txt
            FileReader file = new FileReader("src/projetpendu/liste_mots.txt");
            BufferedReader buffer = new BufferedReader(file);

            // parcourir le fichier
            for (int i = 0; i < lignes; i++) {
                // Si le numéro de la ligne = 5 récupérer la ligne
                if (i == ligneAleatoire)
                    MotCacher = buffer.readLine();
                else
                    buffer.readLine();
            }
            MotCacher = MotCacher.toUpperCase();
            boolean valide = false;
            valide = estValide(MotCacher);
            while(valide!=true){
                for (int i = 0; i < lignes; i++) {
                    // Si le numéro de la ligne = 5 récupérer la ligne
                    if (i == ligneAleatoire)
                        MotCacher = buffer.readLine();
                    else
                        buffer.readLine();
                }
                valide = estValide(MotCacher);
            }



        } catch (IOException e) {
            e.printStackTrace();
        }

        chaine = convertir(MotCacher); // mot à trouver dans une chaine de caractères.
        masque = creerMasque(chaine.length); // '-' dans la chaine.

        System.out.print("la solution:  "); afficher(chaine); // affiche le tableau qui contient la solution.
        System.out.print("le masque:  "); afficher(masque); // affiche un tableau de '_'.

            // String strVar = Character.toString(chaine[i]);
            // System.out.println("Reussie: "+ strVar);


        jTextField2.setText(Arrays.toString(masque));
    }

    public void ChangeImage(){
        nbrImage = nbrImage+1;
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PenduImage/pendu"+nbrImage+".png")));
        if (nbrImage>=11){
            jLabel2.setForeground(new java.awt.Color(184, 17, 46));
            jLabel2.setText("Vous avez perdu la partie !");
            jlabelReponse.setText("Reponse : "+MotCacher);
            jbuttonA.setEnabled(false);
            jbuttonB.setEnabled(false);
            jbuttonC.setEnabled(false);
            jbuttonD.setEnabled(false);
            jbuttonE.setEnabled(false);
            jbuttonF.setEnabled(false);
            jbuttonG.setEnabled(false);
            jbuttonH.setEnabled(false);
            jbuttonI.setEnabled(false);
            jbuttonJ.setEnabled(false);
            jbuttonK.setEnabled(false);
            jbuttonL.setEnabled(false);
            jbuttonM.setEnabled(false);
            jbuttonN.setEnabled(false);
            jbuttonO.setEnabled(false);
            jbuttonP.setEnabled(false);
            jbuttonQ.setEnabled(false);
            jbuttonR.setEnabled(false);
            jbuttonS.setEnabled(false);
            jbuttonT.setEnabled(false);
            jbuttonU.setEnabled(false);
            jbuttonV.setEnabled(false);
            jbuttonW.setEnabled(false);
            jbuttonX.setEnabled(false);
            jbuttonY.setEnabled(false);
            jbuttonZ.setEnabled(false);
            jbuttonAbandonner.setEnabled(false);
        }
    }

    public static int compteur(String mot){ // compte le nombre de caractères valide dans le mot.
        int compteur = 0;
        for(int i = 0; i < mot.length(); i++) {
            if(mot.charAt(i) != ' ' && (mot.charAt(i)>='A' && mot.charAt(i)<='Z')){
                compteur++;
            }
        }
        return compteur;
    }

    public boolean estValide(String mot){
        boolean valide = false;
        int compteur = 0;
        int compteOK = compteur(mot);
        System.out.println("Lettre à trouver: "+compteOK);
        //Compter chaque caractére sauf l'espace
        for(int i = 0; i < mot.length(); i++) {
            if(mot.charAt(i) != ' ' && (mot.charAt(i)>='A' && mot.charAt(i)<='Z')){
                compteur++;
            }
        }
        if (mot==mot.toUpperCase()) {
            valide = true;
        }
        if (compteOK != mot.length()){
            setMotCacher();
            System.out.println("Changement detecté ");
        }
        return valide;
    }

    public static char[] creerMasque(int n){ // tableau de caractères qui prend 'n' valeur.
        char[] masque = new char[n]; // tableau de 'n' case.
        for(int i = 0; i < n; i++) {
            masque[i] =  '_';
        }
        return masque;
    }



    public static char[] convertir(String mot_en_tableau){ // pour chaque mot prend les caractères et les insères dans un tableau de caractères.
        char[] chaine = new char[mot_en_tableau.length()];
        for(int i = 0; i < mot_en_tableau.length(); i++) {
            chaine[i] = mot_en_tableau.charAt(i);
        }
        return chaine;
    }

    public static void afficher(char[] t){ // affiche un tableau de caractères.
        // Ajout des valeurs dans le tableau de caractères t.
        System.out.print("");
        for (char afficher:t){
            System.out.print(afficher+" ");
        }
        System.out.println("");
    }

    public static int compteur_char(char[] mot){ // compte le nombre de caractères valide dans le mot.
        int compteur = 0;
        for(int i = 0; i < mot.length; i++) {
            if (mot[i]=='_') {
                compteur++;
            }
        }
        return compteur;
    }

    public static boolean jouer(char[] solution, char[] masque, char[] caractere){
        boolean present=false; int i = 0;
        while(i < solution.length){
            // for(int i = 0; i < solution.length; i++) {
            if (caractere[0]==solution[i]) {
                masque[i]=caractere[0];
                present=true;
            }
            i++;
        }
        if (present==false) {
            System.out.println("Mauvais caractère !");
        }
        return present;
    }

    public static boolean estFini(char[] masque){
        boolean fini=false; int i = 0;
        int compteur=compteur_char(masque);
        if (compteur==0){ // si le compteur arrive à 0 chance la partie est terminé
            fini=true;
        }
        return fini;
    }

    public void jeux(char[] chaine, char[] masque, char[] caractere){
        boolean validation = true;
        boolean fini = false;

        validation = jouer(chaine,masque,caractere);

        if (validation==false) {
            System.out.println("Non validé!!!");
        }

        fini=estFini(masque);
        if (fini==true) {
            jLabel2.setForeground(new java.awt.Color(11, 167, 31));
            jLabel2.setText("Bravo ! Vous avez trouver le mot");
            jTextField2.setText(Arrays.toString(chaine));
            jbuttonAbandonner.setEnabled(false);
            jlabelReponse.setText(MotCacher);
            jbuttonA.setEnabled(false);
            jbuttonB.setEnabled(false);
            jbuttonC.setEnabled(false);
            jbuttonD.setEnabled(false);
            jbuttonE.setEnabled(false);
            jbuttonF.setEnabled(false);
            jbuttonG.setEnabled(false);
            jbuttonH.setEnabled(false);
            jbuttonI.setEnabled(false);
            jbuttonJ.setEnabled(false);
            jbuttonK.setEnabled(false);
            jbuttonL.setEnabled(false);
            jbuttonM.setEnabled(false);
            jbuttonN.setEnabled(false);
            jbuttonO.setEnabled(false);
            jbuttonP.setEnabled(false);
            jbuttonQ.setEnabled(false);
            jbuttonR.setEnabled(false);
            jbuttonS.setEnabled(false);
            jbuttonT.setEnabled(false);
            jbuttonU.setEnabled(false);
            jbuttonV.setEnabled(false);
            jbuttonW.setEnabled(false);
            jbuttonX.setEnabled(false);
            jbuttonY.setEnabled(false);
            jbuttonZ.setEnabled(false);
        }
    }

    private void jButtonRejouerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setMotCacher();
        nbrImage = 0;
        nbrPartie++;
        jLabel2.setForeground(new java.awt.Color(231, 140, 59));
        jLabel2.setText(nbrPartie+"eme Partie :)");
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PenduImage/pendu0.png")));
        jlabelReponse.setText("Reponse : ");
        jbuttonA.setEnabled(true);
        jbuttonA.setBackground(new Color(0x4E93B8));
        jbuttonB.setEnabled(true);
        jbuttonB.setBackground(new Color(0x4E93B8));
        jbuttonC.setEnabled(true);
        jbuttonC.setBackground(new Color(0x4E93B8));
        jbuttonD.setEnabled(true);
        jbuttonD.setBackground(new Color(0x4E93B8));
        jbuttonE.setEnabled(true);
        jbuttonE.setBackground(new Color(0x4E93B8));
        jbuttonF.setEnabled(true);
        jbuttonF.setBackground(new Color(0x4E93B8));
        jbuttonG.setEnabled(true);
        jbuttonG.setBackground(new Color(0x4E93B8));
        jbuttonH.setEnabled(true);
        jbuttonH.setBackground(new Color(0x4E93B8));
        jbuttonI.setEnabled(true);
        jbuttonI.setBackground(new Color(0x4E93B8));
        jbuttonJ.setEnabled(true);
        jbuttonJ.setBackground(new Color(0x4E93B8));
        jbuttonK.setEnabled(true);
        jbuttonK.setBackground(new Color(0x4E93B8));
        jbuttonL.setEnabled(true);
        jbuttonL.setBackground(new Color(0x4E93B8));
        jbuttonM.setEnabled(true);
        jbuttonM.setBackground(new Color(0x4E93B8));
        jbuttonN.setEnabled(true);
        jbuttonN.setBackground(new Color(0x4E93B8));
        jbuttonO.setEnabled(true);
        jbuttonO.setBackground(new Color(0x4E93B8));
        jbuttonP.setEnabled(true);
        jbuttonP.setBackground(new Color(0x4E93B8));
        jbuttonQ.setEnabled(true);
        jbuttonQ.setBackground(new Color(0x4E93B8));
        jbuttonR.setEnabled(true);
        jbuttonR.setBackground(new Color(0x4E93B8));
        jbuttonS.setEnabled(true);
        jbuttonS.setBackground(new Color(0x4E93B8));
        jbuttonT.setEnabled(true);
        jbuttonT.setBackground(new Color(0x4E93B8));
        jbuttonU.setEnabled(true);
        jbuttonU.setBackground(new Color(0x4E93B8));
        jbuttonV.setEnabled(true);
        jbuttonV.setBackground(new Color(0x4E93B8));
        jbuttonW.setEnabled(true);
        jbuttonW.setBackground(new Color(0x4E93B8));
        jbuttonX.setEnabled(true);
        jbuttonX.setBackground(new Color(0x4E93B8));
        jbuttonY.setEnabled(true);
        jbuttonY.setBackground(new Color(0x4E93B8));
        jbuttonZ.setEnabled(true);
        jbuttonZ.setBackground(new Color(0x4E93B8));
        jbuttonAbandonner.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButtonAbandonnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jlabelReponse.setText("Reponse : "+MotCacher);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PenduImage/pendu11.png")));
        jLabel2.setForeground(new java.awt.Color(184, 17, 46));
        jLabel2.setText("Perdu ! Vous avez Abandonné...");
        jTextField2.setText(Arrays.toString(chaine));
        jbuttonA.setEnabled(false);
        jbuttonB.setEnabled(false);
        jbuttonC.setEnabled(false);
        jbuttonD.setEnabled(false);
        jbuttonE.setEnabled(false);
        jbuttonF.setEnabled(false);
        jbuttonG.setEnabled(false);
        jbuttonH.setEnabled(false);
        jbuttonI.setEnabled(false);
        jbuttonJ.setEnabled(false);
        jbuttonK.setEnabled(false);
        jbuttonL.setEnabled(false);
        jbuttonM.setEnabled(false);
        jbuttonN.setEnabled(false);
        jbuttonO.setEnabled(false);
        jbuttonP.setEnabled(false);
        jbuttonQ.setEnabled(false);
        jbuttonR.setEnabled(false);
        jbuttonS.setEnabled(false);
        jbuttonT.setEnabled(false);
        jbuttonU.setEnabled(false);
        jbuttonV.setEnabled(false);
        jbuttonW.setEnabled(false);
        jbuttonX.setEnabled(false);
        jbuttonY.setEnabled(false);
        jbuttonZ.setEnabled(false);
    }//GEN-LAST:event_jButton2ActionPerformed


    /* -------------------- BOUTON ALPHABET -------------------- */

    private void jButtonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("A") != -1) {
            jbuttonA.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : A");
            caractere = convertir("A");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonA.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : A");
            ChangeImage();
        }
        jbuttonA.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("B") != -1) {
            jbuttonB.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : B");
            caractere = convertir("B");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonB.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : B");
            ChangeImage();
        }
        jbuttonB.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("C") != -1) {
            jbuttonC.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : C");
            caractere = convertir("C");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonC.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : C");
            ChangeImage();
        }
        jbuttonC.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("D") != -1) {
            jbuttonD.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : D");
            caractere = convertir("D");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonD.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : D");
            ChangeImage();
        }
        jbuttonD.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("E") != -1) {
            jbuttonE.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : E");
            caractere = convertir("E");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonE.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : E");
            ChangeImage();
        }
        jbuttonE.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("F") != -1) {
            jbuttonF.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : F");
            caractere = convertir("F");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonF.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : F");
            ChangeImage();
        }
        jbuttonF.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("G") != -1) {
            jbuttonG.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : G");
            caractere = convertir("G");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonG.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : G");
            ChangeImage();
        }
        jbuttonG.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("H") != -1) {
            jbuttonH.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : H");
            caractere = convertir("H");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonH.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : H");
            ChangeImage();
        }
        jbuttonH.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("I") != -1) {
            jbuttonI.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : I");
            caractere = convertir("I");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonI.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : I");
            ChangeImage();
        }
        jbuttonI.setEnabled(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("J") != -1) {
            jbuttonJ.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : J");
            caractere = convertir("J");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonJ.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : J");
            ChangeImage();
        }
        jbuttonJ.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("K") != -1) {
            jbuttonK.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : K");
            caractere = convertir("K");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonK.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : K");
            ChangeImage();
        }
        jbuttonK.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("L") != -1) {
            jbuttonL.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : L");
            caractere = convertir("L");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonL.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : L");
            ChangeImage();
        }
        jbuttonL.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("M") != -1) {
            jbuttonM.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : M");
            caractere = convertir("M");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonM.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : M");
            ChangeImage();
        }
        jbuttonM.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("N") != -1) {
            jbuttonN.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : N");
            caractere = convertir("N");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonN.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : N");
            ChangeImage();
        }
        jbuttonN.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("O") != -1) {
            jbuttonO.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : O");
            caractere = convertir("O");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonO.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : O");
            ChangeImage();
        }
        jbuttonO.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("P") != -1) {
            jbuttonP.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : P");
            caractere = convertir("P");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonP.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : P");
            ChangeImage();
        }
        jbuttonP.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("Q") != -1) {
            jbuttonQ.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : Q");
            caractere = convertir("Q");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonQ.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : Q");
            ChangeImage();
        }
        jbuttonQ.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("R") != -1) {
            jbuttonR.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : R");
            caractere = convertir("R");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonR.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : R");
            ChangeImage();
        }
        jbuttonR.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("S") != -1) {
            jbuttonS.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : S");
            caractere = convertir("S");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonS.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : S");
            ChangeImage();
        }
        jbuttonS.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("T") != -1) {
            jbuttonT.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : T");
            caractere = convertir("T");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonT.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : T");
            ChangeImage();
        }
        jbuttonT.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("U") != -1) {
            jbuttonU.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : U");
            caractere = convertir("U");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonU.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : U");
            ChangeImage();
        }
        jbuttonU.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("V") != -1) {
            jbuttonV.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : V");
            caractere = convertir("V");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonV.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : V");
            ChangeImage();
        }
        jbuttonV.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("W") != -1) {
            jbuttonW.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : W");
            caractere = convertir("W");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonW.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : W");
            ChangeImage();
        }
        jbuttonW.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("X") != -1) {
            jbuttonX.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : X");
            caractere = convertir("X");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonX.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : X");
            ChangeImage();
        }
        jbuttonX.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("Y") != -1) {
            jbuttonY.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : Y");
            caractere = convertir("Y");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonY.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : Y");
            ChangeImage();
        }
        jbuttonY.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButtonZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if(MotCacher.indexOf("Z") != -1) {
            jbuttonZ.setBackground(Color.GREEN);
            jLabel2.setForeground(new java.awt.Color(229, 209, 48));
            jLabel2.setText("Bien joué : Z");
            caractere = convertir("Z");
            jeux(chaine,masque,caractere);
            jTextField2.setText(Arrays.toString(masque));
        } else {
            jbuttonZ.setBackground(Color.RED);
            jLabel2.setForeground(new java.awt.Color(144, 16, 16));
            jLabel2.setText("Ce n'est pas la lettre : Z");
            ChangeImage();
        }
        jbuttonZ.setEnabled(false);
    }//GEN-LAST:event_jButton13ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonPendu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonPendu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonPendu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonPendu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonPendu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Barre_bas;
    private javax.swing.JPanel JPanelAlphabet;
    private javax.swing.JPanel JPanelCadre;
    private javax.swing.JPanel JPanelInformation;
    private javax.swing.JPanel JPanelText;
    private javax.swing.JPanel JpanelFenetre;
    private javax.swing.JPanel PanelImage;
    private javax.swing.JButton jbuttonRestart;
    private javax.swing.JButton jbuttonG;
    private javax.swing.JButton jbuttonH;
    private javax.swing.JButton jbuttonI;
    private javax.swing.JButton jbuttonJ;
    private javax.swing.JButton jbuttonK;
    private javax.swing.JButton jbuttonL;
    private javax.swing.JButton jbuttonM;
    private javax.swing.JButton jbuttonN;
    private javax.swing.JButton jbuttonO;
    private javax.swing.JButton jbuttonP;
    private javax.swing.JButton jbuttonAbandonner;
    private javax.swing.JButton jbuttonQ;
    private javax.swing.JButton jbuttonR;
    private javax.swing.JButton jbuttonS;
    private javax.swing.JButton jbuttonT;
    private javax.swing.JButton jbuttonU;
    private javax.swing.JButton jbuttonV;
    private javax.swing.JButton jbuttonW;
    private javax.swing.JButton jbuttonX;
    private javax.swing.JButton jbuttonY;
    private javax.swing.JButton jbuttonZ;
    private javax.swing.JButton jbuttonQuitter;
    private javax.swing.JButton jbuttonA;
    private javax.swing.JButton jbuttonF;
    private javax.swing.JButton jbuttonB;
    private javax.swing.JButton jbuttonC;
    private javax.swing.JButton jbuttonD;
    private javax.swing.JButton jbuttonE;
    private javax.swing.JLabel jlabelReponse;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    private int nbrImage = 0;
    private int nbrPartie = 1;
    private int faux = 0;
    private int correct = 0;
    private String MotCacher;
    private int score = 0;
    private char[] caractere = new char['0'];
    private char[] chaine;
    private char[] masque;
}
